{
    "version": "1.0",
    "project": "LangGraph Multi-Agent AI",
    "description": "Configuration for deploying the LangGraph multi-agent AI project via LangGraph Studio.",
    "entry_point": "main:main",
    "graphs": {
      "supervisor": "agents.supervisor:supervisor_workflow"
    },
    "agents": [
      {
        "name": "DEBUGGER",
        "file": "langstuff_multi_agent/agents/debugger.py",
        "description": "Agent responsible for debugging code."
      },
      {
        "name": "CONTEXT_MANAGER",
        "file": "langstuff_multi_agent/agents/context_manager.py",
        "description": "Agent responsible for managing conversation context."
      },
      {
        "name": "PROJECT_MANAGER",
        "file": "langstuff_multi_agent/agents/project_manager.py",
        "description": "Agent responsible for managing project timelines and tasks."
      },
      {
        "name": "PROFESSIONAL_COACH",
        "file": "langstuff_multi_agent/agents/professional_coach.py",
        "description": "Agent providing professional and career guidance."
      },
      {
        "name": "LIFE_COACH",
        "file": "langstuff_multi_agent/agents/life_coach.py",
        "description": "Agent providing lifestyle and personal advice."
      },
      {
        "name": "CODER",
        "file": "langstuff_multi_agent/agents/coder.py",
        "description": "Agent that assists with coding tasks."
      },
      {
        "name": "ANALYST",
        "file": "langstuff_multi_agent/agents/analyst.py",
        "description": "Agent specializing in data analysis."
      },
      {
        "name": "RESEARCHER",
        "file": "langstuff_multi_agent/agents/researcher.py",
        "description": "Agent that gathers and summarizes research and news."
      },
      {
        "name": "GENERAL_ASSISTANT",
        "file": "langstuff_multi_agent/agents/general_assistant.py",
        "description": "Agent for general queries and assistance."
      }
    ],
    "dependencies": [
      "langgraph",
      "langchain-anthropic",
      "langchain-core",
      "langchain-openai",
      "python-dotenv"
    ],
    "configuration": {
      "xai_api_key": "${XAI_API_KEY}",
      "default_model": "grok-2-1212",
      "default_temperature": 0,
      "checkpointer": "MemorySaver",
      "logging": {
        "level": "INFO",
        "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
      }
    }
  }
  